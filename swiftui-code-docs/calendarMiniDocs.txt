This is some docs for the calendar/day selection page, again from the iOS app code base. Likely will be similar for flutter implementation.

Calendar and Day Selection:
1. The system presents a calendar view to the user for selecting specific dates or a range of dates.
2. The calendar view displays a grid of days for a given month and year.
3. The month and year are determined based on the user's previous answers.
4. The calendar view includes a legend indicating the new moon and full moon dates. Indicated by the full/new moon emojis.
5. Each day in the calendar is represented by a dayView, which displays the day number and moon phase icons (if applicable).
6. The user can select or deselect a day by tapping on it.
7. When a day is selected, it is added to a temporary list of selected days (tmpDayList).
8. If a day is already selected, tapping on it again will remove it from the selected days list.
9. The system keeps track of the selected days and updates the "Next" button's disabled state accordingly.
   - If no days are selected, the "Next" button is disabled.
   - If one or more days are selected, the "Next" button is enabled.
10. The system also maintains a cache of previously selected days (prevCache) for each question.
11. When navigating to the calendar view, the system checks the cache and pre-selects the previously selected days (if any). AKA this is restoring the selected days based on the question manager class.
12. The calendar view is dynamically generated based on the selected month and year.
    - The calculateDates function calculates the dates for the given month and year and returns an array of dayItem objects.
    - Each dayItem object represents a day in the calendar and contains information such as the day number, target month, month offset, and moon phase indicators.
13. The calendar view is optimised for performance using lazy loading (LazyVGrid) to efficiently render the days.
14. The system handles localisation for month names, weekday abbreviations, and other text elements in the calendar view.

Data Structures:
1. The dayItem struct represents a single day in the calendar and contains the following properties:
   - id: A unique identifier for the day (UUID).
   - dayNumber: The numeric day of the month.
   - targetMonth: A boolean indicating whether the day belongs to the target month.
   - monthOffset: The offset of the day's month from the target month.
   - isNewMoon: A boolean indicating whether the day is a new moon.
   - isFullMoon: A boolean indicating whether the day is a full moon.
2. The tmpDayList is an array of dayItem objects representing the currently selected days.
3. The prevCache is an array that stores the previously selected days for each question.

User Interface:
1. The calendar view is presented within a SwiftUI GeometryReader to adapt to different screen sizes. SwiftUI specific, probably similar widget for flutter.
2. The calendar legend displays the new moon and full moon indicators.
3. The weekday abbreviations are displayed above the calendar grid.
4. Each day in the calendar is represented by a dayView, which is a clickable button.
5. The dayView displays the day number and moon phase icons (if applicable) and highlights the selected days.

Overall, the calendar and day selection functionality allows users to select specific dates or a range of dates from a visual calendar representation. The system maintains the state of selected days, updates the UI accordingly, and provides a cache mechanism for persisting previous selections.
